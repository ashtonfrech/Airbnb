library(readr)
library(dplyr)
library(lubridate)
library(tidyverse)
LA <- read.csv("LA_Listings.csv")
summary(LA)

#transfer variables to factors
LA$Street <- as.factor(LA$Street)
LA$City <- as.factor(LA$City)
LA$Amenities <-as.factor(LA$Amenities)
LA$Property_type<- as.factor(LA$Property_type)
LA$Room_type<- as.factor(LA$Room_type)
LA$Country<- as.factor(LA$Country)
LA$State<- as.factor(LA$State)
LA$Neighbourhood_cleansed<- as.factor(LA$Neighbourhood_cleansed)
#format the date
LA$Calendar_last_scraped<-mdy(LA$Calendar_last_scraped)
LA$Last_Review_Date <-mdy(LA$Last_Review_Date)

summary(LA)

#Dummy coded
LA$Host_Is_Superhost <- as.factor(ifelse(LA$Host_Is_Superhost == "TRUE", 1,0)) 

#transfer NA into mean/median of the variables
LA$Host_Response_Rate <- ifelse(is.na(LA$Host_Response_Rate), mean(LA$Host_Response_Rate,na.rm=TRUE),LA$Host_Response_Rate)
LA$Host_total_listings_count <- ifelse(is.na(LA$Host_total_listings_count), median(LA$Host_total_listings_count,na.rm=TRUE),LA$Host_total_listings_count)
LA$Accommodates <-ifelse(is.na(LA$Accommodates), median(LA$Accommodates,na.rm=TRUE),LA$Accommodates)
LA$Bathrooms <-ifelse(is.na(LA$Bathrooms), median(LA$Bathrooms,na.rm=TRUE),LA$Bathrooms)
LA$Bedrooms <-ifelse(is.na(LA$Bedrooms), median(LA$Bedrooms,na.rm=TRUE),LA$Bedrooms)
LA$Maximum_nights <-ifelse(is.na(LA$Maximum_nights), median(LA$Maximum_nights,na.rm=TRUE),LA$Maximum_nights)

#drop some NA
LA<- LA %>% drop_na(Neighbourhood_cleansed)

#Create new variables
LA$Is_Apartment <- as.factor(ifelse(LA$Property_type=="Apartment",1,0))
LA$Is_House <- as.factor(ifelse(LA$Property_type=="House",1,0))
LA$condo <- as.factor(ifelse(LA$Property_type=="Condominium",1,0)) 
LA$Townhouse <- as.factor(ifelse(LA$Property_type=="Townhouse",1,0)) 
LA$Loft<- as.factor(ifelse(LA$Property_type=="Loft",1,0)) 
LA$Guesthouse<- as.factor(ifelse(LA$Property_type=="Guesthouse",1,0)) 
LA$entirehouse <- as.factor(ifelse(LA$Room_type=="Entire home/apt",1,0)) 
LA$privateroom <- as.factor(ifelse(LA$Room_type=="Private room",1,0)) 
LA$sharedroom <- as.factor(ifelse(LA$Room_type=="Shared room",1,0))
LA$Hollywood_Neighbourhood <- as.factor(ifelse(LA$Neighbourhood_cleansed=="Hollywood",1,0)) 
LA$Venice_Neighbourhood <- as.factor(ifelse(LA$Neighbourhood_cleansed=="Venice",1,0)) 
LA$LongBeach_Neighbourhood <- as.factor(ifelse(LA$Neighbourhood_cleansed=="Long Beach",1,0)) 
LA$Downtown_Neighbourhood <- as.factor(ifelse(LA$Neighbourhood_cleansed=="Downtown",1,0)) 
LA$SantaMonica_Neighbourhood <- as.factor(ifelse(LA$Neighbourhood_cleansed=="Santa Monica",1,0)) 
LA$Recent_Review <-as.factor(ifelse(is.na(LA$Last_Review_Date),as.Date("2020-12-31")-as.Date("2017-04-30"),as.Date("2020-12-31")-LA$Last_Review_Date))

summary(LA) 

#number of columns after splitting by space, find top5 amenities
Amenities<-data.frame(LA$Amenities)
colnames(Amenities)
install.packages('splitstackshape')
library(splitstackshape)
Amenities_2<-cSplit(Amenities, "LA.Amenities", ";")
colnames(Amenities_2)
Amenities_3<-Amenities_2 %>% gather(col,amenities,LA.Amenities_01:LA.Amenities_45,na.rm = T)
Amenities_3$amenities<-tolower(Amenities_3$amenities)
Amenities_3<-Amenities_3 %>% count(amenities)
Amenities_3<-Amenities_3[order(Amenities_3$n,decreasing = T),]
head(Amenities_3)

#find "24-hour check-in", "indoor fireplace", "lock on bedroom door", "pool", "elevator in building" in the LA dataset amenities
Amenities_list = c("24-hour check-in", "indoor fireplace", "lock on bedroom door", "pool", "elevator in building")
for (i in 1:length(Amenities_list)){
  LA[Amenities_list[i]]<-as.factor(ifelse(grepl(Amenities_list[i],LA$Amenities,ignore.case = TRUE),1,0))
}
head(LA)
#create a subset for modeling
LA_sample<-LA[,c("Host_Response_Rate","Host_Is_Superhost","Host_total_listings_count","Accommodates","Bathrooms","Bedrooms","Price","Minimum_nights","Maximum_nights","Availability_365",
                 "Number_of_reviews","Review_Scores_Rating","Review_Scores_Accuracy",
                 "Review_Scores_Cleanliness","Review_Scores_Checkin","Review_Scores_Communication","Review_Scores_Location",
                 "Review_Scores_Value","Reviews_per_month","Is_Apartment","Is_House","condo","Townhouse","Loft","Guesthouse",
                 "Hollywood_Neighbourhood","Venice_Neighbourhood","LongBeach_Neighbourhood","Downtown_Neighbourhood","SantaMonica_Neighbourhood",
                 "entirehouse","privateroom","sharedroom","Recent_Review","24-hour check-in", "indoor fireplace", "lock on bedroom door", "pool", "elevator in building")]

summary(LA_sample) 
#totally 39 variables

#Set training and testing dataset

set.seed(13343)
train_ind <- createDataPartition(y = LA_sample$Review_Scores_Rating,p=.8,list = FALSE)
training <- LA_sample[train_ind,]
test <- LA_sample[-train_ind,]
prop.table(table(LA_sample$Review_Scores_Rating))
prop.table(table(training$Review_Scores_Rating))
prop.table(table(test$Review_Scores_Rating))

#see correlation and check collinearity
colnames(training)
summary(training)
training_t<-training
training_t[] <- lapply(training_t, as.numeric)
correlation<-data.frame(cor(training_t))

#delete review "Review_Scores_Accuracy","Review_Scores_Cleanliness","Review_Scores_Checkin","Review_Scores_Communication","Review_Scores_Location" and entire_house
training<-training[,-which(names(training) %in% c("Review_Scores_Accuracy","Review_Scores_Cleanliness","Review_Scores_Checkin","Review_Scores_Communication","Review_Scores_Location","entirehouse"))]
test<-test[,-which(names(test) %in% c("Review_Scores_Accuracy","Review_Scores_Cleanliness","Review_Scores_Checkin","Review_Scores_Communication","Review_Scores_Location","entirehouse"))]

